@model EInventory.Models.ParameterSetup
@using EInventory.Models
@using EInventory.Helpers

@{
    ViewBag.Title = "Parameter Setup";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<section class="content">
    <div class="row">
        <div class="col-xs-12">
            <div class="box">

                @using (Html.BeginForm("Index", "Parameter", FormMethod.Post, new { @class = "form-horizontal" }))
                {
                    <div class="box-body">
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="box-body">
                            <div class="form-group">
                                @Html.LabelFor(model => model.SetupID, new { @class = "col-sm-2" })
                                <div class="col-sm-2">
                                    @Html.DropDownListFor(model => model.SetupID, new SelectList(ViewBag.listParameterSetup, "SetupID", "ParamType"), new { onchange = "this.form.submit();" })
                                    @Html.ValidationMessageFor(model => model.SetupID)
                                </div>

                            </div>

                            <div class="form-group">
                                <table class="table table-bordered">
                                    <tr>
                                        <th>Parameter Value</th>
                                        @if (Model.IsSystemGene == false)
                                        {
                                            <th>
                                                @Html.NoEncodeActionLink("<span class='glyphicon glyphicon-plus'></span>", "Add", "Add", "Parameter", htmlAttributes: new { id = "contact", data_modal = "", @class = "btn btn-primary pull-right" })
                                            </th>
                                        }
                                    </tr>

                                    @foreach (var item in Model.listParameterValues)
                                    {
                                        <tr>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.ParamVal)
                                            </td>
                                            @if (Model.IsSystemGene == false)
                                            {
                                                <td>
                                                    <div class="pull-right">
                                                        @Html.NoEncodeActionLink("<span class='glyphicon glyphicon-pencil'></span>", "Edit", "Edit", "Parameter", routeValues: new { ID = item.ID }, htmlAttributes: new { id = "contact", data_modal = "", @class = "btn btn-default" })
                                                        &nbsp;
                                                        @Html.NoEncodeActionLink("<span class='glyphicon glyphicon-trash'></span>", "Delete", "Delete", "Parameter", routeValues: new { ID = item.ID }, htmlAttributes: new { id = "contact", data_modal = "", @class = "btn btn-danger" })

                                                    </div>

                                                </td>
                                            }
                                        </tr>
                                    }

                                </table>
                            </div>
                        </div><!-- /.box-body -->
                    </div><!-- /.box -->
                }
            </div><!-- /.col -->
        </div><!-- /.row -->
    </div>
</section>

<!-- modal placeholder-->
<div id='myModal' class='modal fade in'>
    <div class="modal-dialog">
        <div class="modal-content">
            <div id='myModalContent'></div>
        </div>
    </div>
</div>


<script type="text/javascript">


    $(function () {
        $.ajaxSetup({ cache: false });

        $("a#contact").on("click", function (e) {
            // hide dropdown if any (this is used wehen invoking modal from link in bootstrap dropdown )
            //$(e.target).closest('.btn-group').children('.dropdown-toggle').dropdown('toggle');

            $('#myModalContent').load(this.href, function () {
                $('#myModal').modal({
                    /*backdrop: 'static',*/
                    keyboard: true
                }, 'show');
                bindFormContact(this);
            });
            return false;
        });
    });

    function bindFormContact(dialog) {
        $('form', dialog).submit(function () {
            $.ajax({
                url: this.action,
                type: this.method,
                data: $(this).serialize(),
                success: function (result) {
                    if (result.success) {
                        $('#myModal').modal('hide');
                        $(location).attr("href", result.url);
                        //$('#replacetarget1').load(result.url); //  Load data from the server and place the returned HTML into the matched element
                    } else {
                        $('#myModalContent').html(result);
                        bindFormContact(dialog);
                    }
                }
            });
            return false;
        });
    }
</script>
